package main

import (
	"bytes"
	"fmt"
	"text/template"
	"time"
)

// GenerateDummySource returns a compilable source file that imports first-order dependencies for each of the given
// import paths. It omits any dependency paths that contain an element of excludedPathSubstrings.
func GenerateDummySource(importPaths string, excludedPathSubstrings []string) ([]byte, error) {
	packages, err := dependenciesForImportPaths(importPaths, excludedPathSubstrings)
	if err != nil {
		return nil, err
	}

	templateConfig := struct {
		Timestamp time.Time
		Packages  []string
	}{
		Timestamp: time.Now(),
		Packages:  packages,
	}

	buf := &bytes.Buffer{}
	if err := sourceFileTemplate.Execute(buf, templateConfig); err != nil {
		return nil, fmt.Errorf("template: %s", err)
	}

	return buf.Bytes(), nil
}

var sourceFileTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by friendly robots at {{ .Timestamp }}
package main

import (
{{- range .Packages}}
	_ {{ printf "%q" . }}
{{- end}}
)

func main() {
}
`))
